name: Terraform

on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      workspace:
        required: true
        type: string
      apply:
        required: true
        type: boolean
      indexing-service-did:
        required: true
        type: string
      indexing-service-url:
        required: true
        type: string
      principal-mapping:
        required: false
        type: string
      blob-bucket-key-pattern:
        required: false
        type: string
      use-external-blob-bucket:
        required: false
        type: boolean
      external-blob-bucket-endpoint:
        required: false
        type: string
      external-blob-bucket-region:
        required: false
        type: string
      external-blob-bucket-name:
        required: false
        type: string
      external-blob-bucket-domain:
        required: false
        type: string
      ipni-announce-urls:
        required: false
        type: string
    secrets:
      aws-account-id:
        required: true
      allowed-account-ids:
        required: true
      aws-region:
        required: true
      region:
        required: true
      private-key:
        required: true
      indexing-service-proof:
        required: true
      external-blob-bucket-access-key-id:
        required: false
      external-blob-bucket-secret-access-key:
        required: false
      sentry-dsn:
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ inputs.workspace }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  AWS_ACCOUNT_ID: ${{ secrets.aws-account-id }}
  AWS_REGION: ${{ secrets.aws-region }}
  ENV: ${{ inputs.env }}
  TF_WORKSPACE: ${{ inputs.workspace }}
  TF_VAR_region: ${{ secrets.region }}
  TF_VAR_allowed_account_ids: ${{ secrets.allowed-account-ids }}
  TF_VAR_private_key: ${{ secrets.private-key }}
  TF_VAR_indexing_service_did: ${{ inputs.indexing-service-did }}
  TF_VAR_indexing_service_url: ${{ inputs.indexing-service-url }}
  TF_VAR_indexing_service_proof: ${{ secrets.indexing-service-proof }}
  TF_VAR_principal_mapping: ${{ inputs.principal-mapping }}
  TF_VAR_blob_bucket_key_pattern: ${{ inputs.blob-bucket-key-pattern }}
  TF_VAR_use_external_blob_bucket: ${{ inputs.use-external-blob-bucket }}
  TF_VAR_external_blob_bucket_endpoint: ${{ inputs.external-blob-bucket-endpoint }}
  TF_VAR_external_blob_bucket_region: ${{ inputs.external-blob-bucket-region }}
  TF_VAR_external_blob_bucket_name: ${{ inputs.external-blob-bucket-name }}
  TF_VAR_external_blob_bucket_domain: ${{ inputs.external-blob-bucket-domain }}
  TF_VAR_external_blob_bucket_access_key_id: ${{ secrets.external-blob-bucket-access-key-id }}
  TF_VAR_external_blob_bucket_secret_access_key: ${{ secrets.external-blob-bucket-secret-access-key }}
  TF_VAR_sentry_dsn: ${{ secrets.sentry-dsn }}
  TF_VAR_ipni_announce_urls: ${{ inputs.ipni-announce-urls }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/terraform-ci

      - uses: opentofu/setup-opentofu@v1
      - uses: actions/setup-go@v5

      - name: Tofu Init
        run: |
          tofu -chdir="deploy/app" init

      - name: Build Go Apps
        run: |
          cd deploy
          touch .env
          make lambdas

      - name: Terraform Plan
        if: ${{ !inputs.apply }}
        run: |
          tofu -chdir="deploy/app" plan

      - name: Terraform Apply
        if: ${{ inputs.apply }}
        run: |
          tofu -chdir="deploy/app" apply -input=false --auto-approve
